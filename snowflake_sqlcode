1=> BASIC ---HOW TO CREATE TABLE AND HOW TO INSERT VALUES

create warehouse demowarehouse;
create database demodatabase;

show warehouses ; 
show databases;

use warehouse demowarehouse;
use database demodatabase;

drop database demodatabase; ------to delete a database

create table agent(
agent_code varchar(6),
agent_name varchar(40),
working_area varchar(35),
commission number(10,2),  --- 10 denotes total no we want with two decimal  and 2 denotes howmany decimal we want 
phone_no varchar(15),
country varchar(25)
);

describe table agent;-------to see the structure of table

insert into agent values (123,'anand jha','analytics',230.43,'9828049659','india');

insert into agent values (123,'ankit','analytics',230.43,' ','india');

select * from agent;

insert into agent(agent_code,agent_name,country) values (125,'bhaya','india');



USE DATABASE "DEMODATABASE";

 



INSERT INTO AGENT VALUES ('A007', 'Ramasundar', 'Bangalore', '0.15', '077-25814763', ''),
 ('A003', 'Alex ', 'London', '0.13', '075-12458969', ''),
('A008', 'Alford', 'New York', '0.12', '044-25874365', ''),
 ('A011', 'Ravi Kumar', 'Bangalore', '0.15', '077-45625874', ''),
 ('A010', 'Santakumar', 'Chennai', '0.14', '007-22388644', ''),
('A012', 'Lucida', 'San Jose', '0.12', '044-52981425', ''),
 ('A005', 'Anderson', 'Brisban', '0.13', '045-21447739', ''),
  ('A001', 'Subbarao', 'Bangalore', '0.14', '077-12346674', ''),
 ('A002', 'Mukesh', 'Mumbai', '0.11', '029-12358964', ''),
 ('A006', 'McDen', 'London', '0.15', '078-22255588', ''),
 ('A004', 'Ivan', 'Torento', '0.15', '008-22544166', ''),
 ('A009', 'Benjamin', 'Hampshair', '0.11', '008-22536178', '');


select * from agent;

=>HOW TO CREATE VIEW

use database demodatabase;

CREATE TABLE hospital_table (patient_id INTEGER,
                             patient_name VARCHAR, 
                             billing_address VARCHAR,
                             diagnosis VARCHAR, 
                             treatment VARCHAR,
                             cost NUMBER(10,2));
describe table hospital_table;-------it shows metadata-----details about table--specification
                             
INSERT INTO hospital_table 
        (patient_ID, patient_name, billing_address, diagnosis, treatment, cost) 
    VALUES
        (1, 'Mark Knopfler', '1982 Telegraph Road', 'Industrial Disease', 
            'a week of peace and quiet', 2000.00),
        (2, 'Guido van Rossum', '37 Florida St.', 'python bite', 'anti-venom', 
            70000.00)
        ;

select * from hospital_table;

2---view syntax
create view view_name as select col1,col2,col3.... from table_name ;


CREATE VIEW doctor_view AS
    SELECT patient_ID, patient_name, diagnosis, treatment FROM hospital_table;

    select * from doctor_view;

CREATE VIEW accountant_view AS
    SELECT patient_ID, patient_name, billing_address, cost FROM hospital_table;

    
    select * from accountant_view;

    3=> HOW TO LOAD DATA 
    
use database demodatabase;


CREATE or replace table NJ_CONSUMER_COMPLAINTS

(    DATE_RECEIVED STRING,
     PRODUCT_NAME VARCHAR2(50),
     SUB_PRODUCT VARCHAR2(100),
     ISSUE VARCHAR2(100),
     SUB_ISSUE VARCHAR2(100),
     CONSUMER_COMPLAINT_NARRATIVE string,
     Company_Public_Response STRING,
     Company VARCHAR(100),
     State_Name CHAR(4),
     Zip_Code string,
     Tags VARCHAR(40),
     Consumer_Consent_Provided CHAR(25),
     Submitted_via STRING,
     Date_Sent_to_Company STRING,
     Company_Response_to_Consumer VARCHAR(40),
     Timely_Response CHAR(4),
     CONSUMER_DISPUTED CHAR(4),
     COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

select * from  NJ_CONSUMER_COMPLAINTS;


4====>> DATE AND TIME FUNCTION IN SNOWFLAKE

 
 
 use database demodatabase;

-- GET CURRENT DATE
SELECT CURRENT_DATE;

-- GET CURRENT DATE
SELECT CURRENT_TIME ;

-- GET CURRENT TIME
SELECT CURRENT_TIMESTAMP;------it will take utc timezone by default-- in this time and date both will come


-- CONVERT TIMEZONE

SELECT CONVERT_TIMEZONE('UTC',CURRENT_TIMESTAMP) AS UTC_TIMEZONE;


--to_date---For a string expression, the result of converting the string to a date.

SELECT TO_DATE('2013-05-17'), DATE('2013-05-17');---date format should be yyyy-mm-dd

SELECT TO_DATE('2013-05-17');-----either use this
SELECT DATE('2013-05-17'); --- or this both same

---if i want want current day,current hr,current,min in a diff diff column
select day(current_timestamp() ) ,
  hour( current_timestamp() ) ,
  second(current_timestamp()) ,
  minute(current_timestamp()) ,
  month(current_timestamp());


SELECT DAY(CURRENT_DATE) AS dayno_OF_CURRENT_MONTH;---if i want to know about day no of the current month
SELECT WEEK(CURRENT_DATE) AS WEEKno_FROM_START_OF_THE_YEAR;---if i want to know week no from the starting of the year
SELECT MONTH(CURRENT_DATE) AS MNTHno_FROM_START_OF_THE_YEAR;--if i want to know about month no from the starting of the year


SELECT to_date('2022-11-17') AS whole_date;

SELECT DAY(to_date('2022-11-17')) AS dayno_OF_CURRENT_MONTH;

SELECT DAY(to_date('2022-11-17') -  interval'20days') AS days_20_back_from_given_date;

SELECT DAY(date('2022-11-17') - interval'20days') AS days_20_back_from_given_date;

-- GET LAST DAY OF current MONTH
select last_day(current_date) as last_day_curr_month;---it will give me whole date

select day(last_day(current_date)) as last_day_curr_month; ---it will give me only day

select last_day(to_date('2022-11-17')) as last_date_of_given_month;

-- GET LAST DAY OF PREVIOUS MONTH
SELECT LAST_DAY(CURRENT_DATE - INTERVAL '1 MONTH') AS LAST_DAY_PREV_MNTH;

SELECT LAST_DAY(CURRENT_DATE - INTERVAL '1MONTH') AS LAST_DAY_PREV_MNTH;

SELECT LAST_DAY(CURRENT_DATE - INTERVAL '2MONTH') AS LAST_DAY_2PREV_MNTH;


SELECT LAST_DAY( date('2022-11-17') - INTERVAL '1 MONTH') AS LAST_DAY_given_MNTH;

SELECT LAST_DAY(CURRENT_DATE - INTERVAL '2 MONTH') + INTERVAL '1 DAY' AS FIRST_DAY;---it will give first date of previous month

-- go back 5 days from current date

select date(to_date('2022-11-17');

select date(to_date('2022-11-17')- interval '5 day') as five_days_back_from_given_date;

select date(to_date('2022-11-17')- interval '15 day') as fifteen_days_back_from_given_date;

select date(to_date('2022-11-17')- interval '2 week') as two_week_back_from_given_date;

select date(to_date('2022-11-17')- interval '2 months') as two_months_back_from_given_date;


SELECT QUARTER(CURRENT_DATE) AS QTR;----it gives the no of quarter

SELECT QUARTER(to_date('2022-11-17')) AS QTR;






-- GET YR FROM DATE
SELECT DATE_TRUNC('YEAR',CURRENT_DATE) AS YR_FROM_DATE;------it will give the result in the format yyyy-mm-dd
SELECT DATE_TRUNC('YEAR',to_date('2024-04-15')) AS YR_FROM_DATE;

-- GET MTH FROM DATE
SELECT DATE_TRUNC('MONTH',CURRENT_DATE) AS MTH_FROM_DATE;------it will give the result in the format yyyy-mm-dd
SELECT DATE_TRUNC('MONTH',to_date('2024-04-15')) AS MTH_FROM_DATE;

-- GET DAY FROM DATE------it will give the result in the format yyyy-mm-dd
SELECT DATE_TRUNC('DAY',CURRENT_DATE) AS DAY_FROM_DATE;

SELECT DATE_TRUNC('WEEK',CURRENT_DATE) AS WEEK_FROM_DATE;----it will give mondaydate just before currentdate
SELECT DATE_TRUNC('WEEK',to_date('2022-11-17')) AS WEEK_FROM_DATE;





SELECT EXTRACT(YEAR FROM CURRENT_DATE) AS YR;
SELECT EXTRACT(YEAR FROM date('2022-11-17')) AS YR;

SELECT EXTRACT(MONTH FROM CURRENT_DATE) AS MTH;
SELECT EXTRACT(MONTH FROM date('2022-11-17')) AS MTH;

SELECT EXTRACT(DAY FROM CURRENT_DATE) AS DAY;
SELECT EXTRACT(DAY FROM date('2022-11-17')) AS DAY;

SELECT to_date('08-23-2022','mm-dd-yyyy');

SELECT TO_DATE('1993-08-17') AS DATE;



----to_char--it is used to convert format of the date
SELECT TO_CHAR( current_date,'DD-MM-YYYY');

SELECT TO_CHAR(TO_DATE('1993-08-17'),'DD-MM-YYYY') AS DATE_DD_MM_YYYY; --THIS WILL BE HIGHLY USED

SELECT TO_CHAR(TO_DATE('1993-08-17'),'MM-YYYY') AS MM_YYYY;

SELECT TO_CHAR(TO_DATE('1993-08-17'),'MON-YYYY') AS MON_YYYY;

SELECT TO_CHAR(TO_DATE('1993-08-17'),'MON-YY') AS DATE_MON_YY;

SELECT TO_CHAR(TO_DATE('1993-08-17'),'DY') AS DATE_DAY;

SELECT TO_CHAR(TO_DATE('1993-08-17'),'DY-DD-MM-YYYY') AS DATE_DAY;

5====>>>>most commonly used command
---distint
---limit
---% and underscore(_)
---where and like keyword
---where and in clause
---where and between use cases
use database demodatabase;


CREATE or replace table NJ_CONSUMER_COMPLAINTS

(    DATE_RECEIVED STRING,
     PRODUCT_NAME VARCHAR2(50),
     SUB_PRODUCT VARCHAR2(100),
     ISSUE VARCHAR2(100),
     SUB_ISSUE VARCHAR2(100),
     CONSUMER_COMPLAINT_NARRATIVE string,
     Company_Public_Response STRING,
     Company VARCHAR(100),
     State_Name CHAR(4),
     Zip_Code string,
     Tags VARCHAR(40),
     Consumer_Consent_Provided CHAR(25),
     Submitted_via STRING,
     Date_Sent_to_Company STRING,
     Company_Response_to_Consumer VARCHAR(40),
     Timely_Response CHAR(4),
     CONSUMER_DISPUTED CHAR(4),
     COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

select * from  NJ_CONSUMER_COMPLAINTS;

select DISTINCT * from  NJ_CONSUMER_COMPLAINTS;

--SYNTAX : SELECT DISTINCT COL_NAME FROM TABLE_NAME
SELECT DISTINCT PRODUCT_NAME FROM NJ_CONSUMER_COMPLAINTS;----what is the distinct product_name my company having
SELECT DISTINCT SUB_PRODUCT FROM NJ_CONSUMER_COMPLAINTS;
SELECT DISTINCT company FROM NJ_CONSUMER_COMPLAINTS;

select * from NJ_CONSUMER_COMPLAINTS LIMIT 100;------IF YOU WANT TO SEE TOP100 DATA

-- % represents zero,one or multiple character
---_ underscore represent one single charcter

/*
% --- means_any_sequence_of_charector;
a% -- any value that start with a
%a -- any value that ends with a
%word%  -- any values that has word in any position
_a% --- any value that has 'a'in the second position
a_% ---- any value that starts with "a" and are atleast 2 character in length
a__% --- any value that starts with "a" and are atleast 3 character in length
a%r - any values that starts with a and ends with r
ab%cd%de%f - any values that starts with ab followed by any characters and then cd and then followed by any characters 
and then de followed by any charcaters and ending with f
*/




----LIKE KEYWORD------HIGHLY USED IN SQL
a% -- any value that start with a
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE 'Bank%';----IT WILL GIVE ME ALL THE RECORD WHEREEVER THE WORD BANK WILL APPEARING--BANK AT THE START FOLLOWED BY ANY CHARCTER---% AT THE END MEANS-- BANK FOLLOWED BY ANY SEQUENCE OF CHARACTER--

%word% -- any values that has word in any position
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%account%';
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%Credit%';
-----anywhere word 'accound' appearing in the data---it can be ine first,middle or in the last

%a-- any value that ends with a
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%account';----willl show the data 'account' at the and
% --- means_any_sequence_of_charector;
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%loan';----at the end i need loan keyword to be there
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%loan';

_a% --- any value that has a in the second position
SELECT  * FROM NJ_CONSUMER_COMPLAINTS WHERE company LIKE '_a%';

a_% ---- any value that starts with "a" and are atleast 2 character in length;
SELECT  * FROM NJ_CONSUMER_COMPLAINTS WHERE SUBMITTED_VIA LIKE 'F_%';

a__%---any value that starts with "a" and are atleast 3 character in length
SELECT  * FROM NJ_CONSUMER_COMPLAINTS WHERE CONSUMER_COMPLAINT_NARRATIVE LIKE 'a__%';

a%r - any values that starts with a and ends with r
SELECT  * FROM NJ_CONSUMER_COMPLAINTS WHERE SUB_PRODUCT LIKE 'C%t';


  table like_ex
(subject varchar(20));

insert into like_ex values
    ('John  Dddoe'),
    ('Joe   Doe'),
    ('John_down'),
    ('Joe down'),
    ('Elaine'),
    (''),    -- empty string
    (null);

SELECT * FROM like_ex;

select subject from like_ex where subject like '%Jo%oe%' ;


--------------------------in keyword ---------------------------------
SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS;

SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME IN ('Consumer Loan','Mortgage','Debt collection');

SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME = 'Consumer Loan' OR 
PRODUCT_NAME = 'Mortage' OR PRODUCT_NAME = 'Debt collection';


SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS 
WHERE COMPANY IN ('Wells Fargo & Company','Citibank','
Bank of America');

SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS WHERE DATE_RECEIVED BETWEEN '29-07-2013' AND '31-07-2013';  ------- between command wont work untill or unless its(DATE_RECEIVED ) datatype is 'date'data type


use database demodatabase;

CREATE OR REPLACE TABLE aj_sales 
(
  customer_id VARCHAR(1)  ,
  order_date DATE DEFAULT TO_DATE('2022-12-10'),
  product_id INT );

  INSERT INTO aj_sales
VALUES
('A', '2021-01-01', '1'),
('A', '2021-01-01', '2'),
('A', '2021-01-07', '2'),
('A', '2021-01-10', '3'),
('A', '2021-01-11', '3'),
('A', '2021-01-11', '3'),
('B', '2021-01-01', '2'),
('B', '2021-01-02', '2'),
('B', '2021-01-04', '1'),
('B', '2021-01-11', '1'),
('B', '2021-01-16', '3'),
('C','2021-01-07', '3'),
('d','2021-01-23', 4); 

select * from aj_sales where order_date between '2021-01-07' and '2021-02-01' ;---- between command wont work untill or unless its(order_date) datatype is 'date'data type

6=====>CASE STATEMENT

 

use database demodatabase;


CREATE or replace table NJ_CONSUMER_COMPLAINTS

(    DATE_RECEIVED STRING,
     PRODUCT_NAME VARCHAR2(50),
     SUB_PRODUCT VARCHAR2(100),
     ISSUE VARCHAR2(100),
     SUB_ISSUE VARCHAR2(100),
     CONSUMER_COMPLAINT_NARRATIVE string,
     Company_Public_Response STRING,
     Company VARCHAR(100),
     State_Name CHAR(4),
     Zip_Code string,
     Tags VARCHAR(40),
     Consumer_Consent_Provided CHAR(25),
     Submitted_via STRING,
     Date_Sent_to_Company STRING,
     Company_Response_to_Consumer VARCHAR(40),
     Timely_Response CHAR(4),
     CONSUMER_DISPUTED CHAR(4),
     COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

select * from  NJ_CONSUMER_COMPLAINTS;

--SYNTAX : SELECT DISTINCT COL_NAME FROM TABLE_NAME
SELECT DISTINCT PRODUCT_NAME FROM NJ_CONSUMER_COMPLAINTS;----what is the distinct product_name which my company having
SELECT DISTINCT SUB_PRODUCT FROM NJ_CONSUMER_COMPLAINTS;
SELECT DISTINCT company FROM NJ_CONSUMER_COMPLAINTS;

SELECT DISTINCT Submitted_via FROM NJ_CONSUMER_COMPLAINTS;

----syn
CASE
    WHEN <condition1> THEN <result1>
  [ WHEN <condition2> THEN <result2> ]
  [ ... ]
  [ ELSE <result3> ]
END


/*
if the customer is submitting the comment(Submitted_via) using' referral,postal mail,email' treat them as 'outbound' and 'phone , web 'treat them as 'inbound 'and for 'fax' treat them as 'electronic' and i need a column called 'submission_type'
*/
 select *,
CASE
    WHEN Submitted_via in ('Referral','Postal mail','Email')  THEN 'outbound'
    WHEN Submitted_via in ('Phone','Web') THEN 'inbound' 
    ELSE 'electronicS' 
END as subission_type from  NJ_CONSUMER_COMPLAINTS;

 --- STAR MEANS -- SELECT_ALL THE_COLUMN;

/* IF I WANT CERTAIN COLUMN THEN */
select  PRODUCT_NAME  ,
     SUB_PRODUCT  ,
     ISSUE  ,
     SUB_ISSUE  ,
CASE
   WHEN Submitted_via in ('Referral','Postal mail','Email')  THEN 'outbound'
   WHEN Submitted_via in ('Phone','Web') THEN 'inbound' 
   ELSE 'electronicS' 
END as subission_type from  NJ_CONSUMER_COMPLAINTS;

/* WHEREEVER THE WORD  'LOAN' COMES IN PRODUCT_NAME COLUMN THEN  CALL IT LOAN AND Bank account or service,Mortgage,Debt collection,Credit reporting,Money transfers CALL THIS 'SERVICE'  AND Other financial service -----> 'OTHER' */

SELECT DISTINCT PRODUCT_NAME FROM NJ_CONSUMER_COMPLAINTS; 

SELECT *, CASE
WHEN PRODUCT_NAME LIKE '%loan' or PRODUCT_NAME like '%Loan' then 'loan type'
when PRODUCT_NAME in ('Bank account or service','Mortgage','Debt collection','Credit reporting','Money transfers') then 'service'
else 'other'
end as finance_type from NJ_CONSUMER_COMPLAINTS; 

-------OPTIMISEDSELECT CODE
SELECT *, CASE
WHEN upper(PRODUCT_NAME) LIKE '%LOAN'   then 'loan type'
when PRODUCT_NAME in ('Bank account or service','Mortgage','Debt collection','Credit reporting','Money transfers') then 'service'
else 'other'
end as finance_type from NJ_CONSUMER_COMPLAINTS; 

SELECT DISTINCT SUB_PRODUCT FROM NJ_CONSUMER_COMPLAINTS;

WHEREEVER 'NULL' AND 'I do not know' ARE THERE WRITE 'NA' ,,,WHEREEVER THE WORD 'CARD' IS THERE WRITE IT 'CARD', WHEREEVER THE WORD LOAN IS THERE WRITE IT 'LOAN' ,WHEREEVER THE WORD 'MORTGAGE' IS THERE WRITE IT MORTGAGE AND NEW COLUMN NAME SUB_PRODUCT_TYPE;

select *,
CASE
 WHEN SUB_PRODUCT IN ('null','I do not know') THEN 'NA'
 WHEN SUB_PRODUCT LIKE '%card%' then 'card'
when SUB_PRODUCT like '%loan%' then 'loan'
when SUB_PRODUCT like '%mortgage%' then 'mortgage'
else SUB_PRODUCT
end as SUB_PRODUCT_TYPE from NJ_CONSUMER_COMPLAINTS;----it is a wrongcode because null comes with is


select *,
CASE
 WHEN SUB_PRODUCT IS NULL OR SUB_PRODUCT ='I do not know' THEN 'NA'------WHENEVER WE ARE CHECKING FOR NULL WE HAVE TO WRITE IS NULL
 WHEN lower(SUB_PRODUCT) LIKE '%card%' then 'card'
when lower(SUB_PRODUCT) like '%loan%' then 'loan'
when lower(SUB_PRODUCT) like '%mortgage%' then 'mortgage'
else SUB_PRODUCT  ------ here SUB_PRODUCT MEANS ALLL THE DATA(VALUE)  OF THAT COLUMN REMAINS SAME
end as SUB_PRODUCT_TYPE from NJ_CONSUMER_COMPLAINTS;


SELECT DISTINCT Company_Response_to_Consumer FROM NJ_CONSUMER_COMPLAINTS;

select *,
case
when Company_Response_to_Consumer in ('Closed with explanation') then 'explained'
when Company_Response_to_Consumer in ('Closed,Closed with non-monetary relief') then 'closed'
when Company_Response_to_Consumer in ('monetary relief provided') then 'monetary relief provided'
else Company_Response_to_Consumer
end as Company_Response_to_Consumer_TYPE from NJ_CONSUMER_COMPLAINTS;

---NOW CREATING VIEW

CREATE VIEW  NJ_Company_Response_to_Consumer AS SELECT 
 DATE_RECEIVED,PRODUCT_NAME,
     SUB_PRODUCT,
     ISSUE,
     SUB_ISSUE,
     Company,
     State_Name,
     Zip_Code,

CASE
    WHEN Submitted_via in ('Referral','Postal mail','Email')  THEN 'outbound'
    WHEN Submitted_via in ('Phone','Web') THEN 'inbound' 
    ELSE 'electronicS' 
END as subission_type ,

CASE
  WHEN SUB_PRODUCT IN ('null','I do not know') THEN 'NA'
  WHEN SUB_PRODUCT LIKE '%card%' then 'card'
  when SUB_PRODUCT like '%loan%' then 'loan'
  when SUB_PRODUCT like '%mortgage%' then 'mortgage'
  else SUB_PRODUCT
end as SUB_PRODUCT_TYPE,
     
case
  when Company_Response_to_Consumer in ('Closed with explanation') then 'explained'
  when Company_Response_to_Consumer in ('Closed,Closed with non-monetary relief') then 
    'closed'
  when Company_Response_to_Consumer in ('monetary relief provided') then 'monetary relief 
    provided'
  else Company_Response_to_Consumer
  end as Company_Response_to_Consumer_TYPE

from NJ_CONSUMER_COMPLAINTS;

 SELECT * FROM  NJ_Company_Response_to_Consumer;

7======>>>
---WHAT IS CONSTRAINT AND ITS TYPE
---HOW TO CREATE COPY OF A TABLE WITH DATA AND WITH OUT DATA
---ALTER TABLE COMMAND--HOW TO ADD COLUMN IN EXISTING TABLE
                      --HOW TO ADD CONSTRAINT IN EXISTING TABLE OR COLUMN
                      --HOW TO DROP PRIMARY KEY
                      --HOW TO DROP ANY COLUMN
---UPDATE COMMMAND
 ---suppose clint has given us a table we want to find out code behind, what code he has used... it type  and find out that what datatype he has usedd it






--- CONSTRAINT --- RESTRICTION AND OBSTACLE WE ARE PUTTING TO ANY COLUMN SO THAT WE DONT ENTER THE WRONG VALUE

---Snowflake supports the following constraint types
--PRIMARY KEY
--FOREIGN KEY
--UNIQUE
--NOT NULL
--DEFAULT

--Note
--Snowflake supports defining and maintaining constraints, but does not enforce them, except for NOT NULL constraints, which are always enforced.

--->PRIMARY KEY---PRIMARY KEY IS THE KEY WHICH IS UNIQUELY IDENTIFY EACH RECORD IN THE TABLE.
---IT HAS TO BE DISTINCT AND IT CAN NOT BE NULL
--EG---- ADHAR NO -- NO PERSON IN INDIA HAVE SAME ADHAR NO.
--- NO PERSON IN THE WORLD WILL HAVE THE SAME PASSPORT NO.

---WE CAN NOT HAVE DUPLICATE RECORD  IF WE KEEP DUPLICATE RECORD IT WILL THROW US A ERROR IN MY SQL BUT SNOWFLAKE WONT GIVE ERROR BECAUSE SNOWFLAKE DOESNT ENFORCE PRIMARY KEY.

--->NOTNULL---WHEN WE SPECIFY NOTNULL IN ANY COLUMN AND WE INSERT NULL VALUE THEN IT WILL GIVE US ERROR  BECAUSE SNOWFLKAE ENFORCE NOTNULL CONSTRAINT.

---DEFAULT--> DEFAULT IS ALSO A CONSTRAINT WHEN WE SPECIFY THIS CONSTRAINT IN ANY COLUMN IT MEANS IF USER IS NOT GIVING ANY VALUE THAEN IT WILL TAKE DEFAULT VALUE.





use database demodatabase;

CREATE OR REPLACE TABLE aj_sales 
(
  customer_id VARCHAR(1) ,
  order_date DATE default TO_DATE('2022-12-10'),
  product_id INT not null );

  INSERT INTO aj_sales
VALUES
('A', '2021-01-01', '1'),
('A', '2021-01-01', '2'),
('A', '2021-01-07', '2'),
('A', '2021-01-10', '3'),
('A', '2021-01-11', '3'),
('A', '2021-01-11', '3'),
('B', '2021-01-01', '2'),
('B', '2021-01-02', '2'),
('B', '2021-01-04', '1'),
('B', '2021-01-11', '1'),
('B', '2021-01-16', '3'),
('C','2021-01-07', '3'),
('d','2021-01-23','7'); 

insert into aj_sales( customer_id,product_id) values ('e',9);

describe table aj_sales;

select * from  aj_sales;

 



----IF WE WANT TO CREATE(copy) A TABLE STRUCTURE LIKE PREVIOUSLY CREATE TABLE THEN GO WITH LIKE COMMAND
CREATE or replace TABLE aj_sales_copy like aj_sales ;

describe table aj_sales_copy;

select * from  aj_sales_copy;



---IF WE WANT TO CREATE A TABLE STRUCTURE LIKE PREVIOUSLY CREATE TABLE along with data THEN GO WITH LIKE COMMAND
CREATE or replace TABLE aj_sales_copy_data as select * from  aj_sales ;
---if you want specific column with data
CREATE or replace TABLE aj_sales_copy_data as select customer_id , product_id  from  aj_sales ;

describe table aj_sales_copy_data ;

select * from  aj_sales_copy_data ;

--- alter table command syntax
--- SUPPOSE TABLE HASBEEN CREATED.IF WE WANT TO ADD COLUMN IN EXISTING TABLE THEN WE USE ALTER TABLE COMMAND.
---ALTER MEANS ---CHANGED AND MODIFIED


ALTER TABLE <name>
ADD COLUMN <column_name> <column_type> [ <inline_constraint> ] ;


alter table  aj_sales_copy_data
add column pancard varchar(10) ;----will work---IF WE WANT TO ADD COLUMN IN EXISTING TABLE

alter table  aj_sales_copy_data----will work
add column age int ; 

------ add constraint on existing column 
alter table  aj_sales_copy_data
add primary key (customer_id) ;---IF WE WANT TO ADD CONSTRAINT IN EXISTING TABLE OR COLUMN

------if i want to drop primary key
alter table  aj_sales_copy_data
drop primary key;

---LETS TRY THIS
alter table  aj_sales_copy_data
add column pancard2 varchar(10) primary key;----wont work

alter table  aj_sales_copy_data
add column age2 int not null; ------ wont work giving an error

---the issue is comming when we are adding column along with constraint primary key and notnull

alter table  aj_sales_copy_data
add column country varchar(20) default 'none';----will work
---when we are adding column along with constraint default.....its working fine



---add the column first make it primary key using two step process
---add a new column
alter table  aj_sales_copy_data
add column pancard3 varchar(10) ;---- will work

alter table  aj_sales_copy_data
add primary key (pancard3) ;

---- if you want to delete any column
alter table aj_sales_copy_data 
drop column age ;

alter table aj_sales_copy_data
drop column country ;

alter table  aj_sales_copy_data
add column country varchar(20) ;

select * from  aj_sales_copy_data ;




---lets try with empaty table
alter table  aj_sales_copy
add column age int not null;----- when table is emplty it works 

alter table  aj_sales_copy
add column pancard varchar(10) primary key;----will work


describe table aj_sales_copy;
select * from  aj_sales_copy;

select * from  aj_sales_copy_data ;


---update command
--- whereever is age is null i wnat this '15'
--- update commant is used when we want to change content of data for any specific column
update  aj_sales_copy_data
set age = 15 where age is null;
 
 
 ---suppose clint has given us a table we want to find out code behind, what code he has used... it type  and find out that what datatype he has usedd it

 select get_ddl('table','aj_sales_copy_data');

8....======>>>>>STRING FUNCTIONS

---SUBSRTING
---LEN FUNCTION
---CONCAT FUNCTION
---CAST AND TRY_CAST
---TRIM FUNCTION,LTRIM,RTRIM
---REVERCE
---SPLIT,SPLIT_APART,LATERAL FLATTEN
---UPPER AND LOWER
---INITCAP,USE OF DELIMITER IN INITCAP
---REPLACE COMMAND
---RIGHT,LEFT COMMAND
---USE CASES OF LIKE,STARTSWITH,ENDSWITH,CONTAINS
---NYL COMMAND
---COALESCE COMMNAD


USE DEMODATABASE;


create  or replace table agents(
agent_code varchar(6) not null primary key,
agent_name varchar(40),
working_area varchar(35),
commission number(10,2),  --- 10 denotes total no we want with two decimal  and 2 denotes howmany decimal we want 
phone_no varchar(15),
country varchar(25)
);

INSERT INTO AGENTS VALUES ('A007', 'Ramasundar', 'Bangalore',0.15,'077-25814763', '');
INSERT INTO AGENTS(AGENT_CODE,AGENT_NAME,WORKING_AREA) 
VALUES ('A110', 'Anand', 'Germany');

 
INSERT INTO agents VALUES  
 ('A003', 'Alex ', 'London', '0.13', '075-12458969', ''),
('A008', 'Alford', 'New York', '0.12', '044-25874365', ''),
 ('A011', 'Ravi Kumar', 'Bangalore', '0.15', '077-45625874', ''),
 ('A010', 'Santakumar', 'Chennai', '0.14', '007-22388644', ''),
('A012', 'Lucida', 'San Jose', '0.12', '044-52981425', ''),
 ('A005', 'Anderson', 'Brisban', '0.13', '045-21447739', ''),
  ('A001', 'Subbarao', 'Bangalore', '0.14', '077-12346674', ''),
 ('A002', 'Mukesh', 'Mumbai', '0.11', '029-12358964', ''),
 ('A006', 'McDen', 'London', '0.15', '078-22255588', ''),
 ('A004', 'Ivan', 'Torento', '0.15', '008-22544166', ''),
 ('A009', 'Benjamin', 'Hampshair', '0.11', '008-22536178', '');


select * from agents;

-- set the country to india whereever country is null or blank
update agents
set country = 'india' where country is null or country= '';


/* The SUBSTRING () function returns the position of a string or binary value from the complete string, 
starting with the character specified by substring_start_index. If any input is null, null is returned */

--- substring----> it is used to extract the part of string.for eg everyone has a fullname and last name.. so if i want to extract lastname out of full name in that case we use substring function.
---syntax-- select substring('text',start,end);
---start--- starting index of the string that we want
--end---total no of character that we want---means length of the character



--Example 1: Get the substring from a specific string in Snowflake

select substring('ANAND KUMAR JHA', 1, 9) AS PARTIAL_NAME;-- this works in my sql
select substring('ANAND KUMAR JHA', 0, 9) AS PARTIAL_NAME;  ---CHECK IN MYSQL ALSO WHICH WORKS--this doesnt work in my sql

select substring('ANAND KUMAR JHA', 0, 7) AS PARTIAL_NAME;
select substring('ANAND KUMAR JHA', 0, 7) AS PARTIAL_NAME;

select substring('RAJARAM', 1, 3) AS PARTIAL_NAME;

----if we dont specify ending index in syntax then whatever the starting index there it will take till end.

select substring('RAJARAM', 3) AS PARTIAL_NAME;

select substring('ANAND KUMAR JHA', 4, 7);

-- we can also start any string from the beginning  and also from end  for eg

select substring('ANAND KUMAR JHA', -7,3);--- START FROM INDEX -7 AND GIVE NEXT 3 CHARACTER FROM THAT INDEX
select substring('ANAND KUMAR JHA', -7,-3);---WILL GIVE NO OUPPUT

select substring('ANAND KUMAR JHA',NULL);---- will return null

----lets try with column
select agent_code,agent_name, substring(agent_code,-3,3) AS AGENT_FINALS from agents; 
select agent_name, substring(agent_code,2,5) AS AGENT_FINALS from agents;  

---len function
---to returns the length of the string----returns total no of characters in that perticular string
select len('ANAND KUMAR JHA') as my_name_length;

select len('     ANAND KUMAR JHA    ') as my_name_length;



---how to concatenate two string
select 'anand'||'india'||'great' as fullname;

select 'anand'||' india'||' great' as fullname;
          -- or--
select concat('anand','india','great');

select concat('anand',' india',' great');--- if i want to give space

 

----how to concatenate two column
select agent_code||agent_name as agent_details from agent;

select agent_code||' '||agent_name as agent_details from agent;

select phone_no || ' ' || country as detail from agent;



select concat(agent_code,' ',agent_name)as agent_details from agent;



---use of concatenate function in substring

select substring('ANAND KUMAR JHA',1,1)||substring('ANAND KUMAR JHA',7,1)||substring('ANAND KUMAR JHA',13,1)as partial_name;
----------------or------------------------
select concat(substring('ANAND KUMAR JHA',1,1),substring('ANAND KUMAR JHA',7,1),substring('ANAND KUMAR JHA',13,1))as partial_name;






use database demodatabase;


CREATE or replace table NJ_CONSUMER_COMPLAINTS

(    DATE_RECEIVED STRING,
     PRODUCT_NAME VARCHAR2(50),
     SUB_PRODUCT VARCHAR2(100),
     ISSUE VARCHAR2(100),
     SUB_ISSUE VARCHAR2(100),
     CONSUMER_COMPLAINT_NARRATIVE string,
     Company_Public_Response STRING,
     Company VARCHAR(100),
     State_Name CHAR(4),
     Zip_Code string,
     Tags VARCHAR(40),
     Consumer_Consent_Provided CHAR(25),
     Submitted_via STRING,
     Date_Sent_to_Company STRING,
     Company_Response_to_Consumer VARCHAR(40),
     Timely_Response CHAR(4),
     CONSUMER_DISPUTED CHAR(4),
     COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

 

select * from NJ_CONSUMER_COMPLAINTS;

select concat(Zip_Code,PRODUCT_NAME)as details from  NJ_CONSUMER_COMPLAINTS;

create view NJ_CONSUMER_COMPLAINTS_view as select *,concat(Zip_Code,PRODUCT_NAME)as details from  NJ_CONSUMER_COMPLAINTS;

describe view NJ_CONSUMER_COMPLAINTS_view; ----- TO SEE WHAT IS THE DATA TYPE OF DETAILS

 
create view CONSUMER_COMPLAINTS_view2 as select *, concat(State_Name,'-',Zip_Code) as details from  NJ_CONSUMER_COMPLAINTS where SUB_ISSUE is not null and CONSUMER_COMPLAINT_NARRATIVE is not null and SUB_PRODUCT is not null and Company_Public_Response is not null;

select * from CONSUMER_COMPLAINTS_view2;

----cast syntax---Converts a value of one data type into another data type
CAST(' <source_expr>' AS <target_data_type> )
  

 select cast('1.6845' as decimal(4,3));
 
select '1.6845'::decimal(4,3);

select cast('10-Sep-2021' as timestamp);

-- When the provided precision is insufficient 
-- to hold the input value, the Snowflake CAST command raises an error as follows:
select cast('123.12' as number(4,2));
--Here, precision is set as 4 but the input value has a total of 5 digits, thereby raising the error.
select cast('123.12' as number(4,1));

---TRY_CAST
---A special version of CAST , :: that is available for a subset of data type conversions. It performs the same operation (i.e. converts a value of one data type into another data type), but returns a NULL value instead of raising an error when the conversion can not be performed.
--TRY_CAST( <source_string_expr> AS <target_data_type> )

select try_cast('05-Mar-2016' as timestamp);

--The Snowflake TRY_CAST command returns NULL as the input value 
--has more characters than the provided precision in the target data type.
select try_cast('ANAND' as char(4));

select try_cast('1990-09-23' as timestamp);

----trim function--Removes leading and trailing characters from a string.
--trim function---syntax---TRIM( '<expr>' ,' <characters>')
select trim('❄-❄ABC-❄-', '❄-') as trimmed_string;
select trim('❄-❄ABC-❄-', '❄') as trimmed_string;
select trim('❄-❄ABC-❄-', '-') as trimmed_string;
SELECT TRIM('********T E S T I N G 1 2 3 4********','*') AS TRIMMED_SPACE;
SELECT TRIM('********T E S T I*N*G 1 2 3 4********','*') AS TRIMMED_SPACE;

--ltrim
select ltrim('#000000123', '0#');
select ltrim('#0000AISHWARYA', '0#');
select ltrim('      ANAND JHA', '');

--RTRIM
select rtrim('$125.00', '0.');
select rtrim('ANAND JHA*****', '*');

--To remove the white spaces or the blank spaces from the string TRIM function can be used. 
--It can remove the whitespaces from the start and end both.
select TRIM('  Snwoflake Space Remove  ', ' ');

--To remove the first character from the string you can pass the string in the RTRIM function.
select LTRIM('Snowflake Remove  ', 'S'); --in EXCEL U WILL FIND LEFT
--To remove the last character from the string you can pass the string in the RTRIM function.
select RTRIM('Snwoflake Remove  ', 'e'); --IN EXCEL U WILL FIND RIGHT

---REVERSE FUNCTION IN STRING
SELECT REVERSE ('INDIA');


-- SPLIT---Splits a given string with a given separator and returns the result in an array of strings.--ARRAY OF STRING MEANS LIST OF STRING
--SYNTAX--SPLIT('<string>', '<separator>')
select split('127.0.0.1', '.');
SELECT SPLIT('ANAND-KUMAR-JHA',' ');----IF WE DONT SPECIFY FROM WHERE WE NEED TO SPLIT.IT WILL GIVE US ORIGINAL STRING
SELECT SPLIT('ANAND-KUMAR-JHA','-');
select split('|a||', '|');



---split_part--Splits a given string at a specified character and returns the requested part.

----SPLIT_PART('<string>',' <delimiter>', <partNumber>)


select split_part('aaa--bbb-BBB--ccc', '--',1);
select split_part('aaa--bbb-BBB--ccc', '--',2);
select split_part('aaa--bbb-BBB--ccc', '--',3);
select split_part('aaa--bbb-BBB--ccc', '--',4);

select  split_part('11.22.33', '.',0 );-----0 AND 1 BOTH BEHAVE THE SAME.

select  split_part('11.22.33', '.', 1) as first_part , 
        split_part('11.22.33', '.', 2) as sec_part; 

SELECT *,concat(AGENT_CODE, '-', AGENT_NAME) AS agent_details 
  from agents ;  --- i have this out come
         
SELECT split(agent_details, '-')
FROM (
SELECT *,concat(AGENT_CODE, '-', AGENT_NAME) AS agent_details 
  from agents );----- i want agent_details to be split apart


SELECT SPLIT(CONCAT(AGENT_CODE, '-',AGENT_NAME),'-')
  AS agent_details 
  from agents ;
  






---LATERAL FLATTEN----Use the result of SPLIT to generate multiple records from a single string using the LATERAL FLATTEN construct.NOT AVAILABLE IN MYSQL
create table al_persons(
name varchar(10),
children varchar(30)
);

insert  into al_persons values( 'Mark', 'Marky,Mark Jr,Maria' ),
( 'John' ,'Johnny,Jane')   ;

select * from al_persons;

select split(children,',') from al_persons;

SELECT name, C.value::string AS childName
FROM al_persons,
     LATERAL FLATTEN(input=>split(children, ',')) C;


 
----upper and lower ---use case 
---UPPER--Returns the input string expr with all characters converted to uppercase.
-----syn--upper( 'string' )
---LOWER---Returns the input string (expr) with all characters converted to lowercase.
--syn--LOWER( 'string' )
SELECT lower('India Is My Country') as lwr_strng;
SELECT UPPER('India Is My Country') as upr_strng;


select UPPER(CONCAT(substring('ruhee k qureshi',1,1), 
                    substring('ruhee k qureshi',7,1) ,
                    substring('ruhee k qureshi',9,1))) as initial;

---initcap---- Returns the input string (expr) with the first letter of each word in uppercase and the subsequent letters in lowercase.
--syn--INITCAP('<expr>')         
SELECT INITCAP('india is my country') as init_cap_sent;

/*
delimiters specified as an empty string (i.e. '') instructs INITCAP to ignore all delimiters, 
including whitespace characters, in the input expression (i.e. the input expression is treated as a single, continuous word). 
The resulting output is a string with the 
first character capitalized (if the first character is a letter) and all other letters in lowercase.
*/
select initcap('this is the new Frame+work');
select initcap('this is the new Framework','');

---if we are specifying 'q' as a delimiter then first letter will be capital and the every letter after q will be capitalize
select initcap('iqamqinterestedqinqthisqtopic','q');
select initcap('lion☂fRog potato⨊cLoUD', '⨊☂');

---replace command---
--Removes all occurrences of a specified substring, and optionally replaces them with another substring. 
---syn--REPLACE('<subject> ',' <pattern>', '<replacement>'  )This is the value used as a replacement for the pattern.
---subject---The subject is the string in which to do the replacements. Typically, this is a column, but it can be a literal.
--pattern---This is the substring that you want to replace. Typically, this is a literal, but it can be a column or expression
---replacement---

select REPLACE( '   ANAND KUMAR JHA   ' ,' ','*');
select REPLACE( '   ANAND KUMAR JHA   ' ,' '); -- just like trim---If replacement is not specified, subject is returned with all occurrences of pattern removed.

SELECT REPLACE('   T  E S T I N G 1 2 3 4   ',' ');
SELECT TRIM('   T  E S T I N G 1 2 3 4   ',' ');----ALSO SEE THIS DIFFERENCE

select replace('abcd', 'bc') as replaced_nothing_just_remove;

create or replace table replace_example
(subject varchar(10), 
 pattern varchar(10), 
 replacement varchar(10));
 
insert into replace_example 
values('snowman', 'snow', 'fire'), 
('sad face', 'sad', 'happy');

select * from replace_example;

select subject, pattern, replacement, 
       replace(subject, pattern, replacement) as new 
       from replace_example;

---RIGHT,LEFT COMMAND---JUST LIKE SUBSTRING--RETURNS THE RIGHT/LEFT STRING OF THE INPUT
---SYN---RIGHT( '<expr>' , <length_expr> )
select right('ABCDEFG', 2);
select LEFT('ABCDEFG', 4);
SELECT RIGHT('ASJHKVASFJFSACNKLSAHFL2378475723595469HERLLOUS',2) AS COUNTRY_CODE;


---USE CASES OF LIKE,STARTSWITH,ENDSWITH,CONTAINS
select * from NJ_CONSUMER_COMPLAINTS;

select * from NJ_CONSUMER_COMPLAINTS WHERE STARTSWITH(PRODUCT_NAME,'Bank');----IT WILL GIVE THE OUTPUT WHOSE NAME START WITH BANK
select * from NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE 'Bank%';----SIMILAR STARTWITH

select * from NJ_CONSUMER_COMPLAINTS where endswith(PRODUCT_NAME , 'Loan');----IT WILL GIVE THE OUTPUT WHOSE NAME END WITH LOAN  
select * from NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%loan';----same as endswith

select * from NJ_CONSUMER_COMPLAINTS where contains(PRODUCT_NAME, 'Bank');---IT WILL GIVE THE OUTPUT whereever the word bank is comming 
select * from NJ_CONSUMER_COMPLAINTS WHERE PRODUCT_NAME LIKE '%Bank%';---same as contains


select * from agents;
 
SELECT LOWER(CONCAT(AGENT_NAME, ' ', country)) AS NAME_COUNTRY,
       INITCAP(NAME_COUNTRY) AS_INITCAP_EX,
       UPPER(RIGHT(NAME_COUNTRY,2)) AS RIGHT_Country
FROM AGENTS;

---NYL---NVL( <expr1> , <expr2> )---If expr1 is NULL, returns expr2, otherwise returns expr1.
select nvl(null, 'bard') as col1, 
       nvl(null, 0) as col2;
select nvl('FOOD', 'bard') as col1, 
       nvl(null, 3.14) as col2;       

---COALESCE
---Returns the first non-NULL expression among its arguments, or RETURNS NULL if all its arguments are NULL.
---Syntax---COALESCE( <expr1> , <expr2> [ , ... , <exprN> ] )

SELECT COALESCE('hello','ANAND','KUMAR') AS NAME;


SELECT column1, column2, column3,
coalesce(column1, column2, column3) AS EXTRACTED_VALUES
FROM (values
  (1,    2,    3   ),
  (null, 2,    3   ),
  (null, null, 3   ),
  (null, null, null),
  (1,    null, 3   ),
  (1,    null, null),
  (1,    2,    null)
) v;
-------OR
select column1, column2, column3, 
coalesce(column1, column2, column3) as extracted_values
from 
(values
  ('anand', 'kumar'   ,   null  ),
  (null, null, 'singh' )
) v;
-----OR
CREATE TABLE TABLE_NAME(column1 INT, column2 INT, column3 INT);

INSERT INTO TABLE_NAME VALUES (1,    2,    3   ),
  (null, 2,    3   ),
  (null, null, 3   ),
  (null, null, null),
  (1,    null, 3   ),
  (1,    null, null),
  (1,    2,    null)
 ;

 SELECT * FROM TABLE_NAME;

SELECT column1, column2, column3,
coalesce(column1, column2, column3) AS EXTRACTED_VALUES
FROM  TABLE_NAME ;

SELECT COALESCE('hello','ANAND','KUMAR') AS NAME;
 


 

   


















